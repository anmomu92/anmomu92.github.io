I"∂<h2 id="qu√©-es-gitea">¬øQu√© es Gitea?</h2>
<p>Gitea es un software de c√≥digo abierto que permite alojar c√≥digo con control de versi√≥n de versiones, de manera similar a como se lleva a cabo en GitHub. Debido a que Gitea es m√°s ligero, este se puede alojar en ordenadores monoplaca como Raspberry Pi o Zimaboard. En este caso, alojaremos Gitea en una Zimaboard, que es un ordenador monoplaca que utiliza una CPU de arquitectura amd64 en vez de arm64.</p>

<h2 id="instalar-gitea">Instalar Gitea</h2>
<p>La instalaci√≥n de Gitea es muy sencilla. Se lleva a cabo a trav√©s de la tienda de aplicaciones de la ZimaBoard. Los valores de los diferentes campos no es necesario tocarlos. Si decidieras cambiar el puerto SSH, tienes que quedarte con el nuevo valor que le asignes, ya que se tendr√° que utilizar de cara a la conexi√≥n por SSH a la placa. Tras instalar la aplicaci√≥n, puedes entrar en ella clicando el icono de la misma. Si todo ha ido bien, acceder√©is a la p√°gina de inicio de Gitea (v√©ase la Figura 1), donde podr√©is crear vuestra cuenta o iniciar sesi√≥n.</p>

<figure>
    <img src="/assets/images/gitea/gitea-home-page.png" alt="Pagina de inicio de Gitea" />
    <figcaption>Figura 1. P√°gina de inicio de Gitea.</figcaption>
</figure>

<h3 id="modificar-el-fichero-de-configuraci√≥n-de-git-del-repositorio">Modificar el fichero de configuraci√≥n de git del repositorio</h3>
<p>La primera soluci√≥n es a√±adir la opci√≥n <code class="language-plaintext highlighter-rouge">sshcommand = ssh -p &lt;puerto-ssh-host&gt; -i &lt;ruta-clave-privada&gt;</code> dentro de la secci√≥n <code class="language-plaintext highlighter-rouge">[core]</code> del fichero <code class="language-plaintext highlighter-rouge">.git/config</code> que se encuentra en la ra√≠z del repositorio que quieres subir a Gitea. Un ejemplo de dicho fichero ser√≠a el siguiente:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code>[core]
	repositoryformatversion = 0
	filemode = true
	bare = false
	logallrefupdates = true
    sshcommand = sshcommand = ssh -p &lt;puerto-ssh-host&gt; -i &lt;ruta-clave-privada&gt;
[remote "origin"]
	url = &lt;url-repositorio-remoto&gt;
	fetch = +refs/heads/*:refs/remotes/origin/*
[branch "main"]
	remote = origin
	merge = refs/heads/main
</code></pre></div></div>

<p>El problema de esta soluci√≥n es que s√≥lo vale para el repositorio cuyo fichero de configuraci√≥n de git modifiquemos.</p>

<h3 id="modificar-el-puerto-por-defecto-a-nivel-global">Modificar el puerto por defecto a nivel global</h3>
<p>Si se quiere modificar dicha opci√≥n a nivel global, habr√≠a que ejecutar el siguiente commando: <code class="language-plaintext highlighter-rouge">git config --global core.sshCommand "ssh -p &lt;puerto-ssh-host&gt; -i &lt;ruta-clave-privada&gt;"</code>. De esta manera, se modifica el fichero de configuraci√≥n global de git para el usuario. No obstante, puede que queramos tener algunos repositorios en GitHub o GitLab, que utilizan el puerto 22 para SSH. En este caso, lo que imagino que pasar√≠a (no lo he probado, no obstante) es que al sincronizar los cambios con GitHub, nos pida la contrase√±a. Por eso, lo mejor ser√≠a llevar a cabo la tercera soluci√≥n.</p>

<h3 id="modificar-el-fichero-de-configuraci√≥n-de-ssh">Modificar el fichero de configuraci√≥n de SSH</h3>
<p>Dentro del fichero de configuraci√≥n de SSH (<code class="language-plaintext highlighter-rouge">~/.ssh/config</code>) se pueden definir diferentes hosts con diferentes caracter√≠sticas. Esto es muy √∫til si solemos acceder con frecuencia a un ordenador por SSH y no queremos estar tecleando el usuario y la direcci√≥n IP constantemente. Adem√°s, en este fichero podemos cambiar opciones de configuraci√≥n para los diferentes ordenadores remotos que tengamos definidos en √©l. Por ejemplo, en mi caso, el fichero <code class="language-plaintext highlighter-rouge">~/.ssh/config</code> contiene lo siguiente:</p>

<div class="language-plaintext highlighter-rouge"><div class="highlight"><pre class="highlight"><code># Host-specific settings
Host casaos.local
  # Ajustes personalizados para el host casaos.local
  HostName casaos.local
  Port 222
  User casaos 
  IdentityFile ~/.ssh/id_rsa
</code></pre></div></div>

<p>De este modo, cada vez que sincronice el repositorio con el repositorio remoto localizado en casaos.local, se usar√° el puerto 222 en vez del 22. Un detalle importante a mencionar en este punto es que esta secci√≥n definida en el fichero, no nos servir√≠a para acceder a la ZimaBoard por SSH, ya que para eso se utilizar√≠a el puerto 22 y la clave SSH que se haya usado para tal efecto.</p>

<h2 id="conclusiones">Conclusiones</h2>
<p>Esta entrada del blog no detalla la instalaci√≥n de Gitea a trav√©s de contenedores. Est√° destinada a ofrecer diferentes soluciones al problema de la generaci√≥n de claves SSH que me ocurri√≥ a mi en el momento de instalarlo. Asimismo, no soy experto en el tema, as√≠ que si he metido la pata en alg√∫n detalle t√©cnico, perd√≥n.</p>
:ET